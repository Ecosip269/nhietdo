import streamlit as st
import pandas as pd
import random
from datetime import datetime, timedelta

# T·∫°o giao di·ªán nh·∫≠p th·ªùi gian
st.title("·ª®ng d·ª•ng m√¥ ph·ªèng nhi·ªát ƒë·ªô & ƒë·ªô ·∫©m üöÄ")

start_date = st.text_input("Ng√†y b·∫Øt ƒë·∫ßu (DD/MM/YYYY):")
start_time = st.text_input("Gi·ªù b·∫Øt ƒë·∫ßu (HH:MM:SS):")
end_date = st.text_input("Ng√†y k·∫øt th√∫c (DD/MM/YYYY):")
end_time = st.text_input("Gi·ªù k·∫øt th√∫c (HH:MM:SS):")

if st.button("T·∫°o d·ªØ li·ªáu"):
    try:
        start_datetime_str = f"{start_date} {start_time}"
        end_datetime_str = f"{end_date} {end_time}"

        start_time = datetime.strptime(start_datetime_str, "%d/%m/%Y %H:%M:%S")
        end_time = datetime.strptime(end_datetime_str, "%d/%m/%Y %H:%M:%S")

        if start_time >= end_time:
            st.error("Th·ªùi gian b·∫Øt ƒë·∫ßu ph·∫£i nh·ªè h∆°n th·ªùi gian k·∫øt th√∫c!")
        else:
            month = start_time.month
            season = "m∆∞a" if 5 <= month <= 10 else "kh√¥"
            base_temperature = random.uniform(24, 26) if season == "m∆∞a" else random.uniform(25, 27)
            base_humidity = random.uniform(50, 70) if season == "m∆∞a" else random.uniform(40, 60)

            data = []
            current_time = start_time
            while current_time <= end_time:
                hour = current_time.hour
                temperature = base_temperature + random.uniform(-1, 2) if 10 <= hour < 15 else base_temperature + random.uniform(-1, 1)
                humidity_variation = random.uniform(-2, 2)
                humidity = base_humidity - (temperature - base_temperature) * 1.2 + humidity_variation

                temperature = round(min(max(temperature, 22), 28), 1)
                humidity = round(min(max(humidity, 40), 80), 1)

                data.append([current_time, temperature, humidity])
                current_time += timedelta(minutes=30)

            df = pd.DataFrame(data, columns=['Ng√†y th√°ng', 'Nhi·ªát ƒë·ªô (¬∞C)', 'ƒê·ªô ·∫©m (%)'])

            st.success("D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!")
            st.dataframe(df)

            csv = df.to_csv(index=False)
            st.download_button(label="T·∫£i xu·ªëng d·ªØ li·ªáu Excel", data=csv, file_name="nhietke_data.csv", mime="text/csv")

    except ValueError:
        st.error("Vui l√≤ng nh·∫≠p ng√†y v√† gi·ªù ƒë√∫ng ƒë·ªãnh d·∫°ng!")